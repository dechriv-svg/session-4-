Pertemuan 1: dalam pertemuan 1 di modul 2 membahas mengenai cara atau tutorial dalam menginstall vscode. ada berbagai cara dalam 
menginstall vscode yaitu, install vscode di windows Langkah-langkahnya meliputi mengunduh installer dari situs resmi Visual Studio Code, 
menjalankan file installer tersebut, dan mengikuti panduan instalasi yang mudah seperti menyetujui lisensi, memilih lokasi pemasangan, 
serta memilih opsi tambahan seperti membuat shortcut dan menambahkan fitur “Open with Code”. lalu ada penginstalan di maccos dan ubuntu.

Pertemuan 2: modul ini membahas mengenai data, database, dan mariadb. dijelaskan juga bahwa Data adalah representasi fakta, angka, atau 
simbol yang disimpan dalam bentuk tertentu sehingga dapat diproses menjadi informasi  lalu ada perbedaan dalam data dan informasi 
data adalah input, sedangkan informasi adalah output setelah dilakukan pemrosesan Database mendukung efisiensi dengan mengurangi duplikasi dan mempercepat proses 
Sistem Data ada cenderung menghasilkan catatan ganda. istem manual terbukti memiliki keterbatasan dalam hal akurasi, kecepatan, keamanan, dan efisiensi. Database hadir 
sebagai solusi dengan menawarkan konsistensi, integritas, skalabilitas, dan fleksibilitas. Dalam konteks perpustakaan, database memungkinkan layanan lebih cepat, transparan, dan 
responsif terhadap kebutuhan pengguna. Dengan pemahaman ini, peserta siap melanjutkan ke modul berikut yang membandingkan DBMS dengan file tradisional. 
dalam MariaDB dijelaskan bahwa mariadb lahir sebagai turunan dari MySQL setelah akuisisi MySQL oleh Oracle. Banyak pengembang khawatir akan masa depan MySQL sebagai perangkat lunak open-source. 
Oleh karena itu, Monty Widenius, salah satu pencipta MySQL, memimpin pengembangan MariaDB. Nama MariaDB diambil dari nama anaknya, Maria. Sejak itu, MariaDB berkembang pesat sebagai alternatif populer.
ada perbdaan dalam maria db dan mysql menjelaskan bahwa MariaDB memiliki optimisasi query lebih baik. Beberapa benchmark menunjukkan performa MariaDB unggul dibanding MySQL. Hal ini penting bagi perpustakaan 
besar dengan ribuan transaksi. Performa yang baik memastikan layanan tetap lancar. Optimalisasi menjadi daya tarik penting MariaDB.

Pertemuan 3: modul ini memahas terkait cara dalam membuat tabel databse. Database adalah kumpulan data yang terorganisasi dan dikelola secara sistematis. Berbeda dengan file biasa, database memiliki struktur yang 
memungkinkan data dapat diakses, diperbarui, dan dianalisis dengan lebih mudah. Dalam konteks perpustakaan, database menyimpan data anggota, koleksi buku, serta transaksi peminjaman. Semua informasi ini saling terhubung 
sehingga menciptakan sistem yang terpadu. Tanpa database, pengelolaan data berskala besar akan sulit dilakukan. dalam membuat data base memiliki tata cara nya yaitu: 
1. Bukalah terminal atau command prompt lalu login dengan akun root menggunakan perintah mysql -u root -p. 
2. Setelah login, mari kita buat database baru. Database ini akan menjadi rumah bagi tabel-tabel perpustakaan. 
Gunakan perintah: CREATE DATABASE perpustakaan;
3. Dengan perintah ini, MariaDB akan membuat database kosong bernama perpustakaan. Database ini belum memiliki tabel, 
tetapi sudah siap menampung data. Setelah membuat database, jangan lupa untuk memilihnya dengan perintah: USE perpustakaan;
4. SHOW DATABASES;
5. Perintah SELECT DATABASE(); dapat digunakan untuk memeriksa database aktif. 
6. Perintah CREATE TABLE digunakan untuk membuat struktur penyimpanan data. Struktur tabel terdiri dari kolom yang 
merepresentasikan atribut dan baris untuk entitas. Contoh sederhana adalah pembuatan tabel anggota
CREATE TABLE anggota (
    id_anggota INT PRIMARY KEY AUTO_INCREMENT,
    nama VARCHAR(100),
    alamat VARCHAR(150),
    no_telepon VARCHAR(20)
);
7. lalu membuat tabel 


Pertemuan 4: modul ini membahas mengenai menambahkan data dengan insert. Perintah INSERT digunakan untuk menambahkan baris data baru ke dalam tabel. Sintaks dasarnya adalah INSERT INTO nama_tabel (kolom1, kolom2, ...) VALUES (nilai1, nilai2, ...);. 
Dengan sintaks ini, setiap nilai dipetakan langsung ke kolom yang sesuai. Pengguna tidak perlu menuliskan kolom dengan AUTO_INCREMENT seperti id_buku, karena MariaDB akan mengisinya otomatis. Hal ini memastikan setiap baris memiliki identitas unik.
Selain menambahkan satu baris data, MariaDB mendukung input banyak baris dalam satu query. Teknik ini disebut multi-row insert. Formatnya adalah menuliskan beberapa set nilai yang dipisahkan koma dalam satu perintah INSERT. Dengan cara ini, pengguna bisa menghemat waktu sekaligus sumber daya sistem. 
Hal ini sangat bermanfaat untuk mengisi data awal yang banyak. Dalam studi kasus perpustakaan, semua data disimpan di dalam database bernama perpustakaan. Untuk memastikan hal ini, perintah SELECT DATABASE(); digunakan. Jika hasil yang muncul bukan perpustakaan.
Menghapus data adalah salah satu operasi yang paling berisiko dalam manajemen basis data. Berbeda dengan INSERT atau UPDATE yang menambahkan atau memperbarui nilai, DELETE menghapus baris data secara permanen dari tabel.

Pertemuan 5: modul ini membahas cara mencari, menyaring, dan mengurutkan data, serta praktik pencarian buku. Perintah dasar untuk menampilkan kolom tertentu sangat sederhana, tetapi memiliki kegunaan yang luas. Sintaksnya adalah SELECT kolom1, kolom2 FROM nama_tabel;.
asil ini lebih fokus dan mudah dipahami daripada menampilkan semua kolom sekaligus. Efisiensi semacam ini penting terutama ketika data dalam tabel sudah sangat banyak. 
Klausa WHERE dalam SQL adalah salah satu fitur terpenting yang memungkinkan pengguna untuk menyaring data berdasarkan kondisi tertentu. Jika perintah SELECT digunakan tanpa kondisi, maka semua data dalam tabel akan ditampilkan.
Sintaks dasar penggunaan klausa WHERE adalah sebagai berikut:
SELECT kolom1, kolom2 FROM nama_tabel WHERE kondisi;
Mengurutkan data adalah kebutuhan mendasar dalam pengolahan informasi. Tanpa pengurutan, hasil query SQL hanya akan menampilkan data sesuai urutan fisik di tabel, yang tidak selalu sesuai dengan kebutuhan analisis atau laporan. 
Dalam konteks perpustakaan, kemampuan ini penting karena pustakawan sering kali membutuhkan daftar buku dalam urutan tertentu agar lebih mudah dipahami oleh anggota.
Klausa ORDER BY ditambahkan di akhir query SELECT. Secara default, klausa ini mengurutkan data secara menaik (ascending), tetapi pengguna dapat menambahkan kata kunci DESC untuk menampilkan data secara menurun (descending). Misalnya, jika ingin menampilkan judul buku dalam urutan abjad, query yang digunakan adalah:

SELECT judul, penulis FROM buku ORDER BY judul ASC;
